// Generated by view binder compiler. Do not edit!
package com.example.cometchatandroidsample.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cometchatandroidsample.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEducationBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ListView groupsList;

  @NonNull
  public final Button joinGroupButton;

  @NonNull
  public final RecyclerView learningGroups;

  @NonNull
  public final RecyclerView mentor;

  @NonNull
  public final ListView mentorsList;

  @NonNull
  public final Button sendTipButton;

  @NonNull
  public final ImageView tipIcon;

  @NonNull
  public final TextView tipText;

  @NonNull
  public final Toolbar toolbar;

  private ActivityEducationBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ListView groupsList, @NonNull Button joinGroupButton,
      @NonNull RecyclerView learningGroups, @NonNull RecyclerView mentor,
      @NonNull ListView mentorsList, @NonNull Button sendTipButton, @NonNull ImageView tipIcon,
      @NonNull TextView tipText, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.groupsList = groupsList;
    this.joinGroupButton = joinGroupButton;
    this.learningGroups = learningGroups;
    this.mentor = mentor;
    this.mentorsList = mentorsList;
    this.sendTipButton = sendTipButton;
    this.tipIcon = tipIcon;
    this.tipText = tipText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEducationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEducationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_education, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEducationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.groupsList;
      ListView groupsList = ViewBindings.findChildViewById(rootView, id);
      if (groupsList == null) {
        break missingId;
      }

      id = R.id.joinGroupButton;
      Button joinGroupButton = ViewBindings.findChildViewById(rootView, id);
      if (joinGroupButton == null) {
        break missingId;
      }

      id = R.id.learningGroups;
      RecyclerView learningGroups = ViewBindings.findChildViewById(rootView, id);
      if (learningGroups == null) {
        break missingId;
      }

      id = R.id.mentor;
      RecyclerView mentor = ViewBindings.findChildViewById(rootView, id);
      if (mentor == null) {
        break missingId;
      }

      id = R.id.mentorsList;
      ListView mentorsList = ViewBindings.findChildViewById(rootView, id);
      if (mentorsList == null) {
        break missingId;
      }

      id = R.id.sendTipButton;
      Button sendTipButton = ViewBindings.findChildViewById(rootView, id);
      if (sendTipButton == null) {
        break missingId;
      }

      id = R.id.tipIcon;
      ImageView tipIcon = ViewBindings.findChildViewById(rootView, id);
      if (tipIcon == null) {
        break missingId;
      }

      id = R.id.tipText;
      TextView tipText = ViewBindings.findChildViewById(rootView, id);
      if (tipText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityEducationBinding((CoordinatorLayout) rootView, groupsList, joinGroupButton,
          learningGroups, mentor, mentorsList, sendTipButton, tipIcon, tipText, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
